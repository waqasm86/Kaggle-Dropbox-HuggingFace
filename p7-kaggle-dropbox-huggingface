{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"colab":{"machine_shape":"hm","gpuType":"T4"},"accelerator":"GPU","kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[],"dockerImageVersionId":31090,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip -q install huggingface_hub > /dev/null","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T05:59:08.221529Z","iopub.execute_input":"2025-08-21T05:59:08.221761Z","iopub.status.idle":"2025-08-21T05:59:12.115956Z","shell.execute_reply.started":"2025-08-21T05:59:08.221744Z","shell.execute_reply":"2025-08-21T05:59:12.115210Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"!pip install openai > /dev/null","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T05:59:12.117371Z","iopub.execute_input":"2025-08-21T05:59:12.117604Z","iopub.status.idle":"2025-08-21T05:59:15.156109Z","shell.execute_reply.started":"2025-08-21T05:59:12.117582Z","shell.execute_reply":"2025-08-21T05:59:15.155353Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from huggingface_hub import login, logout, whoami","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T05:59:15.157198Z","iopub.execute_input":"2025-08-21T05:59:15.157484Z","iopub.status.idle":"2025-08-21T05:59:15.582445Z","shell.execute_reply.started":"2025-08-21T05:59:15.157434Z","shell.execute_reply":"2025-08-21T05:59:15.581893Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from kaggle_secrets import UserSecretsClient\nHF_TOKEN = UserSecretsClient().get_secret(\"HF_TOKEN\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T05:59:15.583668Z","iopub.execute_input":"2025-08-21T05:59:15.584117Z","iopub.status.idle":"2025-08-21T05:59:15.724811Z","shell.execute_reply.started":"2025-08-21T05:59:15.584097Z","shell.execute_reply":"2025-08-21T05:59:15.724330Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"login(token=HF_TOKEN)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T05:59:15.725401Z","iopub.execute_input":"2025-08-21T05:59:15.725570Z","iopub.status.idle":"2025-08-21T05:59:15.866546Z","shell.execute_reply.started":"2025-08-21T05:59:15.725557Z","shell.execute_reply":"2025-08-21T05:59:15.865814Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# For GPU support\n!pip install -q -U transformers==4.45 accelerate bitsandbytes datasets einops > /dev/null\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T06:38:40.427556Z","iopub.execute_input":"2025-08-21T06:38:40.427922Z","iopub.status.idle":"2025-08-21T06:39:00.890385Z","shell.execute_reply.started":"2025-08-21T06:38:40.427886Z","shell.execute_reply":"2025-08-21T06:39:00.889650Z"}},"outputs":[{"name":"stdout","text":"\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\nbigframes 2.8.0 requires google-cloud-bigquery-storage<3.0.0,>=2.30.0, which is not installed.\ncesium 0.12.4 requires numpy<3.0,>=2.0, but you have numpy 1.26.4 which is incompatible.\ngcsfs 2025.3.2 requires fsspec==2025.3.2, but you have fsspec 2025.3.0 which is incompatible.\nbigframes 2.8.0 requires google-cloud-bigquery[bqstorage,pandas]>=3.31.0, but you have google-cloud-bigquery 3.25.0 which is incompatible.\nbigframes 2.8.0 requires rich<14,>=12.4.4, but you have rich 14.0.0 which is incompatible.\u001b[0m\u001b[31m\n\u001b[0m","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"!pip install mosaicml llm-foundry -U -q > /dev/null\n#!pip install flash-attn --no-build-isolation > /dev/null","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T06:46:31.394686Z","iopub.execute_input":"2025-08-21T06:46:31.394985Z","iopub.status.idle":"2025-08-21T06:46:36.339695Z","shell.execute_reply.started":"2025-08-21T06:46:31.394958Z","shell.execute_reply":"2025-08-21T06:46:36.338692Z"}},"outputs":[],"execution_count":8},{"cell_type":"code","source":"!pip uninstall flash-attn -y\n!pip install flash-attn --no-build-isolation > /dev/null","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T07:04:48.922277Z","iopub.execute_input":"2025-08-21T07:04:48.923078Z","iopub.status.idle":"2025-08-21T07:05:00.817816Z","shell.execute_reply.started":"2025-08-21T07:04:48.923047Z","shell.execute_reply":"2025-08-21T07:05:00.816911Z"}},"outputs":[{"name":"stdout","text":"Found existing installation: flash_attn 2.8.3\nUninstalling flash_attn-2.8.3:\n  Successfully uninstalled flash_attn-2.8.3\n","output_type":"stream"}],"execution_count":13},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import torch\nfrom transformers import AutoTokenizer, AutoModelForCausalLM, BitsAndBytesConfig\n\n# Check if we have multiple GPUs\nprint(f\"Number of GPUs available: {torch.cuda.device_count()}\")\nfor i in range(torch.cuda.device_count()):\n    print(f\"GPU {i}: {torch.cuda.get_device_name(i)}\")\n\n# Configure 4-bit quantization to drastically reduce VRAM usage\nquantization_config = BitsAndBytesConfig(\n    load_in_4bit=True,\n    bnb_4bit_compute_dtype=torch.float16 # Use FP16 for faster computation\n)\n\n# Load the model and let 'accelerate' automatically distribute it across available devices\nmodel = AutoModelForCausalLM.from_pretrained(\n    \"meta-llama/Llama-3.1-8B-Instruct\",\n    quantization_config=quantization_config,\n    device_map=\"auto\",  # The key to multi-GPU and CPU offloading\n    torch_dtype=torch.float16,\n    low_cpu_mem_usage=True\n)\n\n# Load the tokenizer\ntokenizer = AutoTokenizer.from_pretrained(\"meta-llama/Llama-3.1-8B-Instruct\")\n# Add a padding token if it doesn't exist (for batch inference later)\nif tokenizer.pad_token is None:\n    tokenizer.pad_token = tokenizer.eos_token\n\n# Define the chat message\nmessages = [\n    {\"role\": \"user\", \"content\": \"Who are you?\"},\n]\n\n# Apply the chat template and prepare inputs\ninputs = tokenizer.apply_chat_template(\n    messages,\n    add_generation_prompt=True,\n    tokenize=True,\n    return_tensors=\"pt\", # Return PyTorch tensors\n)\n\n# Move inputs to the same device as the model's main layer\ninputs = inputs.to(model.device)\n\n# Generate a response\nwith torch.no_grad(): # Reduces memory usage during generation\n    outputs = model.generate(\n        input_ids=inputs,\n        max_new_tokens=256, # Increased for a more complete answer\n        do_sample=True, # Enable sampling for less repetitive answers\n        temperature=0.7, # Control randomness: lower is more deterministic\n        top_p=0.9, # Nucleus sampling: choose from top p probability mass\n        pad_token_id=tokenizer.eos_token_id # Set pad token for generation\n    )\n\n# Decode only the new tokens (skip the prompt)\nresponse = tokenizer.decode(outputs[0][inputs.shape[1]:], skip_special_tokens=True)\nprint(\"Model's response:\")\nprint(response)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-20T06:50:16.180704Z","iopub.execute_input":"2025-08-20T06:50:16.181494Z","iopub.status.idle":"2025-08-20T06:54:04.350322Z","shell.execute_reply.started":"2025-08-20T06:50:16.181463Z","shell.execute_reply":"2025-08-20T06:54:04.349532Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"###Approach 1###\n\n\nimport torch\nfrom transformers import AutoTokenizer, AutoModelForCausalLM\nimport gc\n\n# Check available devices\nprint(f\"Available GPUs: {torch.cuda.device_count()}\")\nfor i in range(torch.cuda.device_count()):\n    print(f\"GPU {i}: {torch.cuda.get_device_name(i)} - Memory: {torch.cuda.get_device_properties(i).total_memory/1024**3:.1f}GB\")\n\n# Configuration\nmodel_name = \"defog/sqlcoder-7b-2\"\nmax_memory = {\n    0: \"12GB\",\n    1: \"12GB\",\n    \"cpu\": \"20GB\"\n}\n\n# Load tokenizer and set padding token\ntokenizer = AutoTokenizer.from_pretrained(model_name)\nif tokenizer.pad_token is None:\n    tokenizer.pad_token = tokenizer.eos_token  # Set pad token to eos token\n\n# Load model directly\nprint(\"Loading model...\")\nmodel = AutoModelForCausalLM.from_pretrained(\n    model_name,\n    device_map=\"auto\",\n    torch_dtype=torch.float16,\n    max_memory=max_memory,\n    low_cpu_mem_usage=True\n)\n\nprint(f\"Model device map: {model.hf_device_map}\")\n\ndef generate_sql_query(question):\n    \"\"\"Generate SQL query using SQLCoder's preferred format\"\"\"\n    prompt = f\"\"\"### Task\nGenerate a SQL query to answer the following question:\n{question}\n\n### SQL\n\"\"\"\n    \n    # Tokenize input without padding\n    inputs = tokenizer(\n        prompt,\n        return_tensors=\"pt\",\n        truncation=True,\n        max_length=512,\n        padding=False  # No padding needed for single sequences\n    )\n    \n    # Move inputs to the same device as the model\n    input_device = next(model.parameters()).device\n    inputs = {k: v.to(input_device) for k, v in inputs.items()}\n    \n    # Generate text\n    with torch.no_grad():\n        outputs = model.generate(\n            **inputs,\n            max_new_tokens=150,\n            do_sample=True,\n            temperature=0.3,\n            pad_token_id=tokenizer.pad_token_id,  # Use the set pad token\n            repetition_penalty=1.1,\n            num_return_sequences=1\n        )\n    \n    # Extract only the generated SQL part (after the prompt)\n    generated_text = tokenizer.decode(outputs[0][inputs[\"input_ids\"].shape[1]:], skip_special_tokens=True)\n    return generated_text.strip()\n\n# Test queries\nqueries = [\n    \"Write a SQL query to find all customers who made purchases in the last 30 days.\",\n    \"Write a SQL query to find the top 5 products by sales volume.\",\n    \"Write a SQL query to calculate total revenue by month for the current year.\",\n    \"Write a SQL query to find customers who haven't made a purchase in the last 6 months.\"\n]\n\nprint(\"\\n\" + \"=\"*80)\nprint(\"SQL QUERY GENERATION RESULTS\")\nprint(\"=\"*80)\n\nfor i, question in enumerate(queries, 1):\n    print(f\"\\n{i}. Question: {question}\")\n    try:\n        result = generate_sql_query(question)\n        print(f\"   Generated SQL:\\n   {result}\")\n    except Exception as e:\n        print(f\"   Error: {e}\")\n        import traceback\n        traceback.print_exc()\n\n# Memory usage info\nprint(f\"\\n\" + \"=\"*80)\nprint(\"MEMORY USAGE INFO\")\nprint(\"=\"*80)\nfor i in range(torch.cuda.device_count()):\n    allocated = torch.cuda.memory_allocated(i)/1024**3\n    cached = torch.cuda.memory_reserved(i)/1024**3\n    total = torch.cuda.get_device_properties(i).total_memory/1024**3\n    print(f\"GPU {i}: {allocated:.2f}GB allocated, {cached:.2f}GB cached / {total:.2f}GB total ({allocated/total*100:.1f}%)\")\n\n# Clean up\ndel model\ntorch.cuda.empty_cache()\ngc.collect()\n\nprint(f\"\\nAfter cleanup:\")\nfor i in range(torch.cuda.device_count()):\n    allocated = torch.cuda.memory_allocated(i)/1024**3\n    print(f\"GPU {i}: {allocated:.2f}GB allocated\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T05:55:28.290430Z","iopub.execute_input":"2025-08-21T05:55:28.291024Z","iopub.status.idle":"2025-08-21T05:55:51.079914Z","shell.execute_reply.started":"2025-08-21T05:55:28.291001Z","shell.execute_reply":"2025-08-21T05:55:51.079197Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"###Approach 1 Optimized###\n\n\n\nimport torch\nfrom transformers import AutoTokenizer, AutoModelForCausalLM\nimport gc\n\nclass SQLCoderGenerator:\n    def __init__(self, model_name=\"defog/sqlcoder-7b-2\"):\n        self.model_name = model_name\n        self.device_map = \"auto\"\n        self.max_memory = {0: \"12GB\", 1: \"12GB\", \"cpu\": \"20GB\"}\n        \n        # Load tokenizer and set padding token\n        self.tokenizer = AutoTokenizer.from_pretrained(model_name)\n        if self.tokenizer.pad_token is None:\n            self.tokenizer.pad_token = self.tokenizer.eos_token\n        \n        # Load model\n        print(\"Loading SQLCoder model...\")\n        self.model = AutoModelForCausalLM.from_pretrained(\n            model_name,\n            device_map=self.device_map,\n            torch_dtype=torch.float16,\n            max_memory=self.max_memory,\n            low_cpu_mem_usage=True\n        )\n        print(f\"Model loaded on devices: {self.model.hf_device_map}\")\n    \n    def generate_sql(self, question, max_new_tokens=150):\n        \"\"\"Generate SQL query for a given question\"\"\"\n        prompt = f\"\"\"### Task\nGenerate a SQL query to answer the following question:\n{question}\n\n### SQL\n\"\"\"\n        \n        # Tokenize input\n        inputs = self.tokenizer(\n            prompt,\n            return_tensors=\"pt\",\n            truncation=True,\n            max_length=512,\n            padding=False\n        )\n        \n        # Move inputs to model device\n        input_device = next(self.model.parameters()).device\n        inputs = {k: v.to(input_device) for k, v in inputs.items()}\n        \n        # Generate SQL\n        with torch.no_grad():\n            outputs = self.model.generate(\n                **inputs,\n                max_new_tokens=max_new_tokens,\n                do_sample=True,\n                temperature=0.3,\n                pad_token_id=self.tokenizer.pad_token_id,\n                repetition_penalty=1.1\n            )\n        \n        # Extract and clean the generated SQL\n        generated_text = self.tokenizer.decode(\n            outputs[0][inputs[\"input_ids\"].shape[1]:], \n            skip_special_tokens=True\n        )\n        return generated_text.strip()\n    \n    def cleanup(self):\n        \"\"\"Clean up memory\"\"\"\n        del self.model\n        torch.cuda.empty_cache()\n        gc.collect()\n\n# Usage example\nif __name__ == \"__main__\":\n    # Initialize generator\n    sql_generator = SQLCoderGenerator()\n    \n    # Test queries\n    test_queries = [\n        \"Write a SQL query to find all customers who made purchases in the last 30 days.\",\n        \"Write a SQL query to find the top 5 products by sales volume.\",\n        \"Write a SQL query to calculate total revenue by month for the current year.\",\n        \"Write a SQL query to find customers who haven't made a purchase in the last 6 months.\",\n        \"Write a SQL query to get the average order value by customer segment.\"\n    ]\n    \n    print(\"=\" * 80)\n    print(\"SQL CODER GENERATION RESULTS\")\n    print(\"=\" * 80)\n    \n    for i, question in enumerate(test_queries, 1):\n        print(f\"\\n{i}. {question}\")\n        sql_query = sql_generator.generate_sql(question)\n        print(f\"   \\033[92m{sql_query}\\033[0m\")  # Green color for SQL\n    \n    # Memory info\n    print(f\"\\n{'='*80}\")\n    print(\"MEMORY USAGE\")\n    print(f\"{'='*80}\")\n    for i in range(torch.cuda.device_count()):\n        allocated = torch.cuda.memory_allocated(i)/1024**3\n        total = torch.cuda.get_device_properties(i).total_memory/1024**3\n        print(f\"GPU {i}: {allocated:.2f}GB / {total:.2f}GB ({allocated/total*100:.1f}%)\")\n    \n    # Cleanup\n    sql_generator.cleanup()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T06:07:28.780516Z","iopub.execute_input":"2025-08-21T06:07:28.781240Z","iopub.status.idle":"2025-08-21T06:07:54.881157Z","shell.execute_reply.started":"2025-08-21T06:07:28.781214Z","shell.execute_reply":"2025-08-21T06:07:54.880610Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"##########LLM-Foundry+sqlcoder-7b-2########\n\n\n\n\nimport torch\nfrom llmfoundry import MPTForCausalLM\nfrom transformers import AutoTokenizer\nimport re\n\nclass SQLCoderGenerator:\n    def __init__(self, model_name=\"defog/sqlcoder-7b-2\"):\n        self.model_name = model_name\n        \n        # Load tokenizer\n        self.tokenizer = AutoTokenizer.from_pretrained(model_name, trust_remote_code=True)\n        if self.tokenizer.pad_token is None:\n            self.tokenizer.pad_token = self.tokenizer.eos_token\n            \n        # Configure device map for 2 GPUs\n        self.device_map = \"auto\"\n        self.max_memory = {0: \"14GB\", 1: \"14GB\"} # Allocate most VRAM to GPUs\n\n        print(\"Loading SQLCoder model with LLM Foundry...\")\n        # Use LLM Foundry's MPTForCausalLM for inference (works with other archs too)\n        self.model = MPTForCausalLM.from_pretrained(\n            model_name,\n            device_map=self.device_map,\n            torch_dtype=torch.bfloat16,  # Use bfloat16 for efficiency on T4\n            max_memory=self.max_memory,\n            trust_remote_code=True\n        )\n        self.model.eval() # Set to evaluation mode\n        print(f\"Model loaded on devices: {self.model.hf_device_map}\")\n\n    def create_prompt(self, question, schema_context):\n        \"\"\"Creates a structured prompt with schema context for complex SQL generation.\"\"\"\n        # This prompt structure is crucial for sqlcoder's performance\n        prompt_template = f\"\"\"\n### Instructions:\nYour task is to write a SQL query to answer the following question.\nYour response must be ONLY the valid SQL query itself, without any explanation or text before or after.\n\n### Database Schema:\nThe query will run on a database with the following tables and columns:\n{schema_context}\n\n### Question:\n{question}\n\n### Answer:\n\"\"\"\n        return prompt_template.strip()\n\n    def generate_sql(self, question, schema_context, max_new_tokens=200):\n        \"\"\"Generate a SQL query for a given question and database schema.\"\"\"\n        \n        prompt = self.create_prompt(question, schema_context)\n        \n        # Tokenize with padding and truncation\n        inputs = self.tokenizer(\n            prompt,\n            return_tensors=\"pt\",\n            truncation=True,\n            max_length=2048,  # Longer context for complex schemas\n            padding=True\n        )\n        \n        # Move inputs to the main device of the model\n        input_device = next(self.model.parameters()).device\n        inputs = {k: v.to(input_device) for k, v in inputs.items()}\n        \n        # Generate with the model\n        with torch.no_grad():\n            with torch.cuda.amp.autocast(dtype=torch.bfloat16):\n                outputs = self.model.generate(\n                    **inputs,\n                    max_new_tokens=max_new_tokens,\n                    do_sample=False,        # Change to True and adjust temp for more creativity\n                    temperature=0.3,\n                    pad_token_id=self.tokenizer.pad_token_id,\n                    eos_token_id=self.tokenizer.eos_token_id,\n                    repetition_penalty=1.1,\n                    use_cache=True          # Use KV cache for faster generation\n                )\n        \n        # Decode only the new tokens (the generated SQL)\n        generated_tokens = outputs[0][inputs[\"input_ids\"].shape[1]:]\n        generated_sql = self.tokenizer.decode(generated_tokens, skip_special_tokens=True)\n        \n        # Clean up the output: often the model generates text after the SQL. We try to extract just the query.\n        # Look for the first common SQL command and stop at the first semicolon or end of string.\n        generated_sql = generated_sql.split(';')[0] + ';' # Get the first complete query\n        generated_sql = generated_sql.strip()\n        \n        return generated_sql\n\n# --- EXAMPLE USAGE WITH COMPLEX SCHEMAS AND QUERIES ---\nif __name__ == \"__main__\":\n    \n    # 1. Initialize the generator\n    print(\"Initializing model...\")\n    sql_generator = SQLCoderGenerator()\n    \n    # 2. Define a REALISTIC database schema context for complex queries\n    # This is the most important part for getting good results.\n    complex_schema = \"\"\"\nTable: customers\n- id (integer, primary key)\n- name (varchar)\n- signup_date (date)\n- country_code (varchar)\n- segment (varchar)\n\nTable: orders\n- id (integer, primary key)\n- customer_id (integer, foreign key to customers.id)\n- order_date (date)\n- status (varchar) -- e.g., 'completed', 'returned'\n\nTable: order_items\n- id (integer, primary key)\n- order_id (integer, foreign key to orders.id)\n- product_id (integer, foreign key to products.id)\n- quantity (integer)\n- price_per_unit (decimal)\n\nTable: products\n- id (integer, primary key)\n- name (varchar)\n- category (varchar)\n- supplier_id (integer)\n    \nTable: suppliers\n- id (integer, primary key)\n- name (varchar)\n- country (varchar)\n    \"\"\"\n    \n    # 3. Define COMPLEX test questions that require joins, subqueries, and CTEs\n    complex_test_queries = [\n        # Complex Join & Aggregation\n        \"Find the top 3 customers by total revenue in the 'premium' segment, but only include revenue from orders placed in 2023 where the product category was 'electronics'. Show their name and total revenue.\",\n\n        # Subquery & Date Filtering\n        \"Identify all customers who have made at least one order in the last month but have not made any orders in the last 7 days. Return their ID and name.\",\n\n        # Multi-table Join & Conditional Logic (CASE)\n        \"Calculate the monthly revenue for each product category in the year 2023, including a column that shows the percentage change from the previous month. Use a CTE for clarity.\",\n\n        # Complex Filtering with EXISTS\n        \"Find all products that have never been ordered by customers from a specific country, say 'USA'.\",\n        \n        # Window Function (RANK)\n        \"For each customer segment, find the customer who made the single largest order (by total amount) in the last quarter. Return the segment, customer name, order date, and the order total.\"\n    ]\n    \n    print(\"\\n\" + \"=\"*90)\n    print(\"LLM-FOUNDRY SQLCODER COMPLEX QUERY GENERATION\")\n    print(\"=\"*90)\n    \n    # 4. Generate SQL for each complex question\n    for i, question in enumerate(complex_test_queries, 1):\n        print(f\"\\n{i}. QUESTION: {question}\")\n        try:\n            sql_query = sql_generator.generate_sql(question, complex_schema, max_new_tokens=300) # More tokens for complex queries\n            print(f\"\\n\\033[94mGENERATED SQL:\\033[0m\\n\\033[92m{sql_query}\\033[0m\")  # Blue for label, Green for SQL\n        except Exception as e:\n            print(f\"\\n\\033[91mError generating query: {e}\\033[0m\")\n        print(\"-\" * 50)\n\n    # 5. Print memory info\n    print(f\"\\n{'='*50}\")\n    print(\"MEMORY USAGE INFO\")\n    print(f\"{'='*50}\")\n    for i in range(torch.cuda.device_count()):\n        mem_alloc = torch.cuda.memory_allocated(i) / 1024**3\n        mem_cached = torch.cuda.memory_reserved(i) / 1024**3\n        total_mem = torch.cuda.get_device_properties(i).total_memory / 1024**3\n        print(f\"GPU {i}: {mem_alloc:.2f}GB allocated, {mem_cached:.2f}GB cached, {total_mem:.2f}GB total\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T07:07:30.235291Z","iopub.execute_input":"2025-08-21T07:07:30.235925Z","iopub.status.idle":"2025-08-21T07:07:30.282918Z","shell.execute_reply.started":"2025-08-21T07:07:30.235891Z","shell.execute_reply":"2025-08-21T07:07:30.281967Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/llmfoundry/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m     \u001b[0;32mfrom\u001b[0m \u001b[0mflash_attn\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mflash_attn_func\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m     \u001b[0;32mdel\u001b[0m \u001b[0mflash_attn_func\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/flash_attn/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m from flash_attn.flash_attn_interface import (\n\u001b[0m\u001b[1;32m      4\u001b[0m     \u001b[0mflash_attn_func\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/flash_attn/flash_attn_interface.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m     \u001b[0;32mimport\u001b[0m \u001b[0mflash_attn_2_cuda\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mflash_attn_gpu\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     16\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mImportError\u001b[0m: /usr/local/lib/python3.11/dist-packages/flash_attn_2_cuda.cpython-311-x86_64-linux-gnu.so: undefined symbol: _ZN3c105ErrorC2ENS_14SourceLocationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_36/2309562409.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mllmfoundry\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mMPTForCausalLM\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtransformers\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mAutoTokenizer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mre\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/llmfoundry/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;32mexcept\u001b[0m \u001b[0mImportError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;34m'undefined symbol'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 17\u001b[0;31m         raise ImportError(\n\u001b[0m\u001b[1;32m     18\u001b[0m             \u001b[0;34m'The flash_attn package is not installed correctly. Usually this means that your runtime version'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m             \u001b[0;34m+\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mImportError\u001b[0m: The flash_attn package is not installed correctly. Usually this means that your runtime version of PyTorch is different from the version that flash_attn was installed with, which can occur when your workflow has resulted in PyTorch being reinstalled. This probably happened because you are using an old Docker image with the latest version of LLM Foundry. Check that the PyTorch version in your Docker image matches the PyTorch version in LLM Foundry setup.py and update accordingly. The latest Docker image can be found in the README."],"ename":"ImportError","evalue":"The flash_attn package is not installed correctly. Usually this means that your runtime version of PyTorch is different from the version that flash_attn was installed with, which can occur when your workflow has resulted in PyTorch being reinstalled. This probably happened because you are using an old Docker image with the latest version of LLM Foundry. Check that the PyTorch version in your Docker image matches the PyTorch version in LLM Foundry setup.py and update accordingly. The latest Docker image can be found in the README.","output_type":"error"}],"execution_count":14},{"cell_type":"code","source":"!pip list --version","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T07:02:24.830818Z","iopub.execute_input":"2025-08-21T07:02:24.831529Z","iopub.status.idle":"2025-08-21T07:02:26.789993Z","shell.execute_reply.started":"2025-08-21T07:02:24.831502Z","shell.execute_reply":"2025-08-21T07:02:26.789227Z"}},"outputs":[{"name":"stdout","text":"Package                               Version             Editable project location\n------------------------------------- ------------------- -------------------------\nabsl-py                               1.4.0\naccelerate                            1.8.1\naiofiles                              22.1.0\naiohappyeyeballs                      2.6.1\naiohttp                               3.12.13\naiosignal                             1.3.2\naiosqlite                             0.21.0\nalabaster                             1.0.0\nalbucore                              0.0.24\nalbumentations                        2.0.8\nale-py                                0.11.1\nalembic                               1.16.2\naltair                                5.5.0\nannotated-types                       0.7.0\nannoy                                 1.17.3\nansicolors                            1.1.8\nantlr4-python3-runtime                4.9.3\nanyio                                 4.9.0\napache-libcloud                       3.8.0\nargcomplete                           3.6.2\nargon2-cffi                           25.1.0\nargon2-cffi-bindings                  21.2.0\nargs                                  0.1.0\narray_record                          0.7.2\narrow                                 1.3.0\narviz                                 0.21.0\nastropy                               7.1.0\nastropy-iers-data                     0.2025.6.23.0.39.50\nasttokens                             3.0.0\nastunparse                            1.6.3\natpublic                              5.1\nattrs                                 25.3.0\naudioread                             3.0.1\nautograd                              1.8.0\nazure-core                            1.35.0\nazure-identity                        1.24.0\nazure-storage-blob                    12.26.0\nazure-storage-file-datalake           12.21.0\nbabel                                 2.17.0\nbackcall                              0.2.0\nbackoff                               2.2.1\nbackports.tarfile                     1.2.0\nbayesian-optimization                 3.0.0\nbcrypt                                4.3.0\nbeartype                              0.21.0\nbeautifulsoup4                        4.13.4\nbetterproto                           2.0.0b6\nbigframes                             2.8.0\nbigquery-magics                       0.9.0\nbitsandbytes                          0.47.0\nbleach                                6.2.0\nblinker                               1.9.0\nblis                                  1.3.0\nblobfile                              3.0.0\nblosc2                                3.5.0\nbokeh                                 3.7.3\nBoruta                                0.4.3\nboto3                                 1.39.1\nbotocore                              1.39.1\nBottleneck                            1.4.2\nbq_helper                             0.4.1               /root/src/BigQuery_Helper\nbqplot                                0.12.45\nbranca                                0.8.1\nBrotli                                1.1.0\nbuild                                 1.2.2.post1\nCacheControl                          0.14.3\ncachetools                            5.5.2\nCartopy                               0.24.1\ncatalogue                             2.0.10\ncatboost                              1.2.8\ncategory_encoders                     2.7.0\ncertifi                               2025.6.15\ncesium                                0.12.4\ncffi                                  1.17.1\nchardet                               5.2.0\ncharset-normalizer                    3.4.2\nChessnut                              0.4.1\nchex                                  0.1.89\ncircuitbreaker                        2.1.3\nclarabel                              0.11.1\nclick                                 8.2.1\nclick-plugins                         1.1.1.2\ncligj                                 0.7.2\nclint                                 0.5.1\ncloudpathlib                          0.21.1\ncloudpickle                           3.1.1\ncmake                                 3.31.6\ncmdstanpy                             1.2.5\ncolorama                              0.4.6\ncolorcet                              3.1.0\ncoloredlogs                           15.0.1\ncolorlog                              6.9.0\ncolorlover                            0.3.0\ncolour                                0.1.5\ncomm                                  0.2.2\ncommunity                             1.0.0b1\nconfection                            0.1.5\ncons                                  0.4.6\ncontourpy                             1.3.2\ncoolname                              2.2.0\ncoverage                              7.9.1\ncramjam                               2.10.0\ncryptography                          44.0.3\ncuda-bindings                         12.9.0\ncuda-python                           12.9.0\ncudf-cu12                             25.2.2\ncudf-polars-cu12                      25.2.2\ncufflinks                             0.17.3\ncuml-cu12                             25.2.1\ncupy-cuda12x                          13.4.1\ncurl_cffi                             0.11.4\ncuvs-cu12                             25.2.1\ncvxopt                                1.3.2\ncvxpy                                 1.6.6\ncycler                                0.12.1\ncyipopt                               1.5.0\ncymem                                 2.0.11\nCython                                3.0.12\ncytoolz                               1.0.1\ndaal                                  2025.6.1\ndacite                                1.9.2\ndask                                  2024.12.1\ndask-cuda                             25.2.0\ndask-cudf-cu12                        25.2.2\ndask-expr                             1.1.21\ndatabricks-sdk                        0.64.0\ndataclasses-json                      0.6.7\ndataproc-spark-connect                0.7.5\ndatascience                           0.17.6\ndatasets                              3.6.0\ndb-dtypes                             1.4.3\ndbus-python                           1.2.18\ndeap                                  1.4.3\ndebugpy                               1.8.0\ndecorator                             4.4.2\ndeepdiff                              8.5.0\ndefusedxml                            0.7.1\nDeprecated                            1.2.18\ndiffusers                             0.34.0\ndill                                  0.3.8\ndipy                                  1.11.0\ndistributed                           2024.12.1\ndistributed-ucxx-cu12                 0.42.0\ndistro                                1.9.0\ndlib                                  19.24.6\ndm-tree                               0.1.9\ndnspython                             2.7.0\ndocker                                7.1.0\ndocker-pycreds                        0.4.0\ndocstring_parser                      0.16\ndocstring-to-markdown                 0.17\ndocutils                              0.21.2\ndopamine_rl                           4.1.2\nduckdb                                1.2.2\nearthengine-api                       1.5.21\neasydict                              1.13\neasyocr                               1.7.2\neditdistance                          0.8.1\neerepr                                0.1.2\neinops                                0.8.1\neli5                                  0.13.0\nemail_validator                       2.2.0\nemoji                                 2.14.1\nen_core_web_sm                        3.8.0\nentrypoints                           0.4\net_xmlfile                            2.0.0\netils                                 1.12.2\netuples                               0.3.9\nexecnb                                0.1.14\nFarama-Notifications                  0.0.4\nfastai                                2.7.19\nfastapi                               0.115.13\nfastcore                              1.7.29\nfastdownload                          0.0.7\nfastjsonschema                        2.21.1\nfastprogress                          1.0.3\nfastrlock                             0.8.3\nfasttext                              0.9.3\nfeaturetools                          1.31.0\nffmpy                                 0.6.0\nfilelock                              3.18.0\nfiona                                 1.10.1\nfirebase-admin                        6.9.0\nflash_attn                            2.8.3\nFlask                                 3.1.1\nflatbuffers                           25.2.10\nflax                                  0.10.6\nfolium                                0.19.7\nfonttools                             4.58.4\nfqdn                                  1.5.1\nfrozendict                            2.4.6\nfrozenlist                            1.7.0\nfsspec                                2023.6.0\nfuncy                                 2.0\nfury                                  0.12.0\nfuture                                1.0.0\nfuzzywuzzy                            0.18.0\ngast                                  0.6.0\ngatspy                                0.3\ngcsfs                                 2025.3.2\nGDAL                                  3.8.4\ngdown                                 5.2.0\ngeemap                                0.35.3\ngensim                                4.3.3\ngeocoder                              1.38.1\ngeographiclib                         2.0\ngeojson                               3.2.0\ngeopandas                             0.14.4\ngeopy                                 2.4.1\nghapi                                 1.0.6\ngin-config                            0.5.0\ngitdb                                 4.0.12\nGitPython                             3.1.44\nglob2                                 0.7\ngoogle                                2.0.3\ngoogle-ai-generativelanguage          0.6.15\ngoogle-api-core                       2.25.1\ngoogle-api-python-client              2.173.0\ngoogle-auth                           2.40.3\ngoogle-auth-httplib2                  0.2.0\ngoogle-auth-oauthlib                  1.2.2\ngoogle-cloud-aiplatform               1.99.0\ngoogle-cloud-automl                   1.0.1\ngoogle-cloud-bigquery                 3.25.0\ngoogle-cloud-bigquery-connection      1.18.3\ngoogle-cloud-core                     2.4.3\ngoogle-cloud-dataproc                 5.20.0\ngoogle-cloud-datastore                2.21.0\ngoogle-cloud-firestore                2.21.0\ngoogle-cloud-functions                1.20.4\ngoogle-cloud-iam                      2.19.1\ngoogle-cloud-language                 2.17.2\ngoogle-cloud-resource-manager         1.14.2\ngoogle-cloud-spanner                  3.55.0\ngoogle-cloud-storage                  2.10.0\ngoogle-cloud-translate                3.12.1\ngoogle-cloud-videointelligence        2.16.2\ngoogle-cloud-vision                   3.10.2\ngoogle-colab                          1.0.0\ngoogle-crc32c                         1.7.1\ngoogle-genai                          1.21.1\ngoogle-generativeai                   0.8.5\ngoogle-pasta                          0.2.0\ngoogle-resumable-media                2.7.2\ngoogleapis-common-protos              1.70.0\ngoogledrivedownloader                 1.1.0\ngpxpy                                 1.6.2\ngql                                   4.0.0\ngradio                                5.31.0\ngradio_client                         1.10.1\ngraphene                              3.4.3\ngraphql-core                          3.2.6\ngraphql-relay                         3.2.0\ngraphviz                              0.21\ngreenlet                              3.2.3\ngroovy                                0.1.2\ngrpc-google-iam-v1                    0.14.2\ngrpc-interceptor                      0.15.4\ngrpcio                                1.73.1\ngrpcio-status                         1.49.0rc1\ngrpclib                               0.4.8\ngspread                               6.2.1\ngspread-dataframe                     4.0.0\ngunicorn                              23.0.0\ngym                                   0.25.2\ngym-notices                           0.0.8\ngymnasium                             0.29.0\nh11                                   0.16.0\nh2                                    4.2.0\nh2o                                   3.46.0.7\nh5netcdf                              1.6.1\nh5py                                  3.14.0\nhaversine                             2.9.0\nhdbscan                               0.8.40\nhep_ml                                0.8.0\nhf_transfer                           0.1.9\nhf-xet                                1.1.5\nhighspy                               1.11.0\nholidays                              0.75\nholoviews                             1.20.2\nhpack                                 4.1.0\nhtml5lib                              1.1\nhtmlmin                               0.1.12\nhttpcore                              1.0.9\nhttpimport                            1.4.1\nhttplib2                              0.22.0\nhttpx                                 0.28.1\nhuggingface-hub                       0.33.1\nhumanfriendly                         10.0\nhumanize                              4.12.3\nhyperframe                            6.1.0\nhyperopt                              0.2.7\nibis-framework                        9.5.0\nid                                    1.5.0\nidna                                  3.10\nigraph                                0.11.9\nImageHash                             4.3.1\nimageio                               2.37.0\nimageio-ffmpeg                        0.6.0\nimagesize                             1.4.1\nimbalanced-learn                      0.13.0\nimmutabledict                         4.2.1\nimportlib_metadata                    8.7.0\nimportlib_resources                   6.5.2\nimutils                               0.5.4\nin-toto-attestation                   0.9.3\ninflect                               7.5.0\niniconfig                             2.1.0\nintel-cmplr-lib-rt                    2024.2.0\nintel-cmplr-lib-ur                    2024.2.0\nintel-openmp                          2024.2.0\nipyevents                             2.0.2\nipyfilechooser                        0.6.0\nipykernel                             6.17.1\nipyleaflet                            0.20.0\nipympl                                0.9.7\nipyparallel                           8.8.0\nipython                               7.34.0\nipython-genutils                      0.2.0\nipython-sql                           0.5.0\nipytree                               0.2.2\nipywidgets                            8.1.5\nisodate                               0.7.2\nisoduration                           20.11.0\nisoweek                               1.3.3\nitsdangerous                          2.2.0\nJanome                                0.5.0\njaraco.classes                        3.4.0\njaraco.context                        6.0.1\njaraco.functools                      4.2.1\njax                                   0.5.2\njax-cuda12-pjrt                       0.5.1\njax-cuda12-plugin                     0.5.1\njaxlib                                0.5.1\njedi                                  0.19.2\njeepney                               0.9.0\njieba                                 0.42.1\nJinja2                                3.1.6\njiter                                 0.10.0\njmespath                              1.0.1\njoblib                                1.5.1\njson5                                 0.12.0\njsonpatch                             1.33\njsonpickle                            4.1.1\njsonpointer                           3.0.0\njsonschema                            4.24.0\njsonschema-specifications             2025.4.1\njupyter_client                        8.6.3\njupyter-console                       6.1.0\njupyter_core                          5.8.1\njupyter-events                        0.12.0\njupyter_kernel_gateway                2.5.2\njupyter-leaflet                       0.20.0\njupyter-lsp                           1.5.1\njupyter_server                        2.12.5\njupyter_server_fileid                 0.9.3\njupyter_server_terminals              0.5.3\njupyter_server_ydoc                   0.8.0\njupyter-ydoc                          0.2.5\njupyterlab                            3.6.8\njupyterlab-lsp                        3.10.2\njupyterlab_pygments                   0.3.0\njupyterlab_server                     2.27.3\njupyterlab_widgets                    3.0.15\njupytext                              1.17.2\nkaggle                                1.7.4.5\nkaggle-environments                   1.17.6\nkagglehub                             0.3.12\nkeras                                 3.8.0\nkeras-core                            0.1.7\nkeras-cv                              0.9.0\nkeras-hub                             0.18.1\nkeras-nlp                             0.18.1\nkeras-tuner                           1.4.7\nkeyring                               25.6.0\nkeyrings.google-artifactregistry-auth 1.1.2\nkiwisolver                            1.4.8\nkornia                                0.8.1\nkornia_rs                             0.1.9\nkt-legacy                             1.0.5\nlangchain                             0.3.26\nlangchain-core                        0.3.66\nlangchain-text-splitters              0.3.8\nlangcodes                             3.5.0\nlangid                                1.1.6\nlangsmith                             0.4.1\nlanguage_data                         1.3.0\nlaunchpadlib                          1.10.16\nlazr.restfulclient                    0.14.4\nlazr.uri                              1.0.6\nlazy_loader                           0.4\nlearntools                            0.3.5\nlibclang                              18.1.1\nlibcudf-cu12                          25.2.2\nlibcugraph-cu12                       25.2.0\nlibcuml-cu12                          25.2.1\nlibcuvs-cu12                          25.2.1\nlibkvikio-cu12                        25.2.1\nlibpysal                              4.9.2\nlibraft-cu12                          25.2.0\nlibrosa                               0.11.0\nlibucx-cu12                           1.18.1\nlibucxx-cu12                          0.42.0\nlightgbm                              4.5.0\nlightning-utilities                   0.14.3\nlime                                  0.2.0.1\nline_profiler                         4.2.0\nlinkify-it-py                         2.0.3\nllm-foundry                           0.22.0\nllvmlite                              0.43.0\nlml                                   0.2.0\nlocket                                1.0.0\nlogical-unification                   0.4.6\nlxml                                  5.4.0\nMako                                  1.3.10\nmamba                                 0.11.3\nmarisa-trie                           1.2.1\nMarkdown                              3.8.2\nmarkdown-it-py                        3.0.0\nMarkupSafe                            3.0.2\nmarshmallow                           3.26.1\nmatplotlib                            3.7.2\nmatplotlib-inline                     0.1.7\nmatplotlib-venn                       1.1.2\nmdit-py-plugins                       0.4.2\nmdurl                                 0.1.2\nminiKanren                            1.0.3\nmissingno                             0.5.2\nmistune                               0.8.4\nmizani                                0.13.5\nmkl                                   2025.2.0\nmkl-fft                               1.3.8\nmkl-random                            1.2.4\nmkl-service                           2.4.1\nmkl-umath                             0.1.1\nml_collections                        1.1.0\nml-dtypes                             0.4.1\nmlcrate                               0.2.0\nmlflow                                2.22.1\nmlflow-skinny                         2.22.1\nmlxtend                               0.23.4\nmne                                   1.9.0\nmodel-signing                         1.0.1\nmore-itertools                        10.7.0\nmosaicml                              0.32.1\nmosaicml-cli                          0.7.3\nmosaicml-streaming                    0.12.0\nmoviepy                               1.0.3\nmpld3                                 0.5.10\nmpmath                                1.3.0\nmsal                                  1.33.0\nmsal-extensions                       1.3.1\nmsgpack                               1.1.1\nmultidict                             6.6.3\nmultimethod                           1.12\nmultipledispatch                      1.0.0\nmultiprocess                          0.70.16\nmultitasking                          0.0.11\nmurmurhash                            1.0.13\nmusic21                               9.3.0\nmypy_extensions                       1.1.0\nnamex                                 0.1.0\nnarwhals                              1.44.0\nnatsort                               8.4.0\nnbclassic                             1.3.1\nnbclient                              0.5.13\nnbconvert                             6.4.5\nnbdev                                 2.3.36\nnbformat                              5.10.4\nndindex                               1.10.0\nnest-asyncio                          1.6.0\nnetworkx                              3.5\nnibabel                               5.3.2\nnilearn                               0.10.4\nninja                                 1.11.1.4\nnltk                                  3.9.1\nnotebook                              6.5.4\nnotebook_shim                         0.2.4\nnumba                                 0.60.0\nnumba-cuda                            0.2.0\nnumexpr                               2.11.0\nnumpy                                 1.26.4\nnvidia-cublas-cu12                    12.6.4.1\nnvidia-cuda-cupti-cu12                12.6.80\nnvidia-cuda-nvcc-cu12                 12.5.82\nnvidia-cuda-nvrtc-cu12                12.6.77\nnvidia-cuda-runtime-cu12              12.6.77\nnvidia-cudnn-cu12                     9.5.1.17\nnvidia-cufft-cu12                     11.3.0.4\nnvidia-cufile-cu12                    1.11.1.6\nnvidia-curand-cu12                    10.3.7.77\nnvidia-cusolver-cu12                  11.7.1.2\nnvidia-cusparse-cu12                  12.5.4.2\nnvidia-cusparselt-cu12                0.6.3\nnvidia-ml-py                          12.575.51\nnvidia-nccl-cu12                      2.26.2\nnvidia-nvcomp-cu12                    4.2.0.11\nnvidia-nvjitlink-cu12                 12.6.85\nnvidia-nvtx-cu12                      12.6.77\nnvtx                                  0.2.12\nnx-cugraph-cu12                       25.2.0\noauth2client                          4.1.3\noauthlib                              3.3.1\noci                                   2.158.2\nodfpy                                 1.4.1\nolefile                               0.47\nomegaconf                             2.3.0\nonnx                                  1.18.0\nonnxruntime                           1.22.0\nopen_spiel                            1.6\nopenai                                1.91.0\nopencv-contrib-python                 4.11.0.86\nopencv-python                         4.11.0.86\nopencv-python-headless                4.11.0.86\nopenpyxl                              3.1.5\nopenslide-bin                         4.0.0.8\nopenslide-python                      1.4.2\nopentelemetry-api                     1.36.0\nopentelemetry-sdk                     1.36.0\nopentelemetry-semantic-conventions    0.57b0\nopt_einsum                            3.4.0\noptax                                 0.2.5\noptree                                0.16.0\noptuna                                4.4.0\norbax-checkpoint                      0.11.16\norderly-set                           5.4.1\norjson                                3.10.18\nosqp                                  1.0.4\noverrides                             7.7.0\npackaging                             24.2\npandas                                2.2.3\npandas-datareader                     0.10.0\npandas-gbq                            0.29.1\npandas-profiling                      3.6.6\npandas-stubs                          2.2.2.240909\npandasql                              0.7.3\npandocfilters                         1.5.1\npanel                                 1.7.1\npapermill                             2.6.0\nparam                                 2.2.1\nparamiko                              3.5.1\nparso                                 0.8.4\nparsy                                 2.1\npartd                                 1.4.2\npath                                  17.1.0\npath.py                               12.5.0\npathlib                               1.0.1\npathos                                0.3.1\npatsy                                 1.0.1\npdf2image                             1.17.0\npeewee                                3.18.1\npeft                                  0.15.2\npettingzoo                            1.24.0\npexpect                               4.9.0\nphik                                  0.12.4\npickleshare                           0.7.5\npillow                                11.2.1\npip                                   24.1.2\nplatformdirs                          4.3.8\nplotly                                5.24.1\nplotly-express                        0.4.1\nplotnine                              0.14.5\npluggy                                1.6.0\nplum-dispatch                         2.5.7\nply                                   3.11\npolars                                1.21.0\npooch                                 1.8.2\nportpicker                            1.5.2\npox                                   0.3.6\nppft                                  1.7.7\npreprocessing                         0.1.13\npreshed                               3.0.10\nprettytable                           3.16.0\nproglog                               0.1.12\nprogressbar2                          4.5.0\nprometheus_client                     0.22.1\npromise                               2.3\nprompt_toolkit                        3.0.51\npropcache                             0.3.2\nprophet                               1.1.7\nproto-plus                            1.26.1\nprotobuf                              5.29.5\npsutil                                7.0.0\npsycopg2                              2.9.10\nptyprocess                            0.7.0\npudb                                  2025.1\npuremagic                             1.29\npy-cpuinfo                            9.0.0\npy4j                                  0.10.9.7\npyaml                                 25.5.0\nPyArabic                              0.6.15\npyarrow                               19.0.1\npyasn1                                0.6.1\npyasn1_modules                        0.4.2\npybind11                              2.13.6\npycairo                               1.28.0\npyclipper                             1.3.0.post6\npycocotools                           2.0.10\npycparser                             2.22\npycryptodome                          3.23.0\npycryptodomex                         3.23.0\npycuda                                2025.1.1\npydantic                              2.11.7\npydantic_core                         2.33.2\npydata-google-auth                    1.9.1\npydegensac                            0.1.2\npydicom                               3.0.1\npydot                                 3.0.4\npydotplus                             2.0.2\nPyDrive                               1.3.1\nPyDrive2                              1.21.3\npydub                                 0.25.1\npyemd                                 1.0.0\npyerfa                                2.0.1.5\npyexcel-io                            0.6.7\npyexcel-ods                           0.6.0\npygame                                2.6.1\npygit2                                1.18.0\npygltflib                             1.16.4\nPygments                              2.19.2\nPyGObject                             3.42.0\nPyJWT                                 2.10.1\npyLDAvis                              3.4.1\npylibcudf-cu12                        25.2.2\npylibcugraph-cu12                     25.2.0\npylibraft-cu12                        25.2.0\npymc                                  5.23.0\npymc3                                 3.11.4\npymongo                               4.13.2\nPympler                               1.1\npymystem3                             0.2.0\nPyNaCl                                1.5.0\npynndescent                           0.5.13\npynvjitlink-cu12                      0.5.2\npynvml                                11.5.3\npyogrio                               0.11.0\npyomo                                 6.9.2\nPyOpenGL                              3.1.9\npyOpenSSL                             24.3.0\npyparsing                             3.0.9\npypdf                                 5.7.0\npyperclip                             1.9.0\npyproj                                3.7.1\npyproject_hooks                       1.2.0\npyshp                                 2.3.1\nPySocks                               1.7.1\npyspark                               3.5.1\npytensor                              2.31.4\npytesseract                           0.3.13\npytest                                8.3.5\npython-apt                            0.0.0\npython-bidi                           0.6.6\npython-box                            7.3.2\npython-dateutil                       2.9.0.post0\npython-json-logger                    3.3.0\npython-louvain                        0.16\npython-lsp-jsonrpc                    1.1.2\npython-lsp-server                     1.12.2\npython-multipart                      0.0.20\npython-slugify                        8.0.4\npython-snappy                         0.7.3\npython-utils                          3.9.1\npytools                               2025.1.7\npytorch-ignite                        0.5.2\npytorch-lightning                     2.5.2\npytorch-ranger                        0.1.1\npytz                                  2025.2\nPyUpSet                               0.1.1.post7\npyviz_comms                           3.0.6\nPyWavelets                            1.8.0\nPyYAML                                6.0.2\npyzmq                                 24.0.1\nqgrid                                 1.3.1\nqtconsole                             5.6.1\nQtPy                                  2.4.3\nquestionary                           2.1.0\nraft-dask-cu12                        25.2.0\nrapids-dask-dependency                25.2.0\nratelim                               0.1.6\nray                                   2.47.1\nreferencing                           0.36.2\nregex                                 2024.11.6\nrequests                              2.32.4\nrequests-oauthlib                     2.0.0\nrequests-toolbelt                     1.0.0\nrequirements-parser                   0.9.0\nrfc3161-client                        1.0.3\nrfc3339-validator                     0.1.4\nrfc3986-validator                     0.1.1\nrfc8785                               0.1.4\nrgf-python                            3.12.0\nrich                                  14.0.0\nrmm-cu12                              25.2.0\nroman-numerals-py                     3.1.0\nrpds-py                               0.25.1\nrpy2                                  3.5.17\nrsa                                   4.9.1\nrtree                                 1.4.0\nruamel.yaml                           0.18.15\nruamel.yaml.clib                      0.2.12\nruff                                  0.12.0\ns3fs                                  0.4.2\ns3transfer                            0.13.0\nsafehttpx                             0.1.6\nsafetensors                           0.5.3\nscikit-image                          0.25.2\nscikit-learn                          1.2.2\nscikit-learn-intelex                  2025.6.1\nscikit-multilearn                     0.2.0\nscikit-optimize                       0.10.2\nscikit-plot                           0.3.7\nscikit-surprise                       1.1.4\nscipy                                 1.15.3\nscooby                                0.10.1\nscs                                   3.2.7.post2\nseaborn                               0.12.2\nSecretStorage                         3.3.3\nsecuresystemslib                      1.3.0\nsegment_anything                      1.0\nsemantic-version                      2.10.0\nsemver                                3.0.4\nSend2Trash                            1.8.3\nsentence-transformers                 4.1.0\nsentencepiece                         0.2.0\nsentry-sdk                            2.31.0\nsetproctitle                          1.3.6\nsetuptools                            75.2.0\nsetuptools-scm                        8.3.1\nshap                                  0.44.1\nshapely                               2.1.1\nshellingham                           1.5.4\nShimmy                                1.3.0\nsigstore                              3.6.4\nsigstore-protobuf-specs               0.3.2\nsigstore-rekor-types                  0.0.18\nsimple-parsing                        0.1.7\nsimpleitk                             2.5.2\nsimplejson                            3.20.1\nsimsimd                               6.4.9\nsiphash24                             1.7\nsix                                   1.17.0\nsklearn-compat                        0.1.3\nsklearn-pandas                        2.2.0\nslack_sdk                             3.36.0\nslicer                                0.0.7\nsmart-open                            7.1.0\nsmmap                                 5.0.2\nsniffio                               1.3.1\nsnowballstemmer                       3.0.1\nsortedcontainers                      2.4.0\nsoundfile                             0.13.1\nsoupsieve                             2.7\nsoxr                                  0.5.0.post1\nspacy                                 3.8.7\nspacy-legacy                          3.0.12\nspacy-loggers                         1.0.5\nspanner-graph-notebook                1.1.7\nSphinx                                8.2.3\nsphinx-rtd-theme                      0.2.4\nsphinxcontrib-applehelp               2.0.0\nsphinxcontrib-devhelp                 2.0.0\nsphinxcontrib-htmlhelp                2.1.0\nsphinxcontrib-jsmath                  1.0.1\nsphinxcontrib-qthelp                  2.0.0\nsphinxcontrib-serializinghtml         2.0.0\nSQLAlchemy                            2.0.41\nsqlglot                               25.20.2\nsqlparse                              0.5.3\nsquarify                              0.4.4\nsrsly                                 2.5.1\nstable-baselines3                     2.1.0\nstanio                                0.5.1\nstarlette                             0.46.2\nstatsmodels                           0.14.4\nstopit                                1.1.2\nstringzilla                           3.12.5\nstumpy                                1.13.0\nsympy                                 1.14.0\ntables                                3.10.2\ntabulate                              0.9.0\ntbb                                   2022.2.0\ntbb4py                                2022.2.0\ntblib                                 3.1.0\ntcmlib                                1.4.0\ntenacity                              8.5.0\ntensorboard                           2.18.0\ntensorboard-data-server               0.7.2\ntensorflow                            2.18.0\ntensorflow-cloud                      0.1.5\ntensorflow-datasets                   4.9.9\ntensorflow_decision_forests           1.11.0\ntensorflow-hub                        0.16.1\ntensorflow-io                         0.37.1\ntensorflow-io-gcs-filesystem          0.37.1\ntensorflow-metadata                   1.17.2\ntensorflow-probability                0.25.0\ntensorflow-text                       2.18.1\ntensorstore                           0.1.74\ntermcolor                             3.1.0\nterminado                             0.18.1\ntestpath                              0.6.0\ntext-unidecode                        1.3\ntextblob                              0.19.0\ntexttable                             1.7.0\ntf_keras                              2.18.0\ntf-slim                               1.1.0\nTheano                                1.0.5\nTheano-PyMC                           1.1.2\nthinc                                 8.3.6\nthreadpoolctl                         3.6.0\ntifffile                              2025.6.11\ntiktoken                              0.9.0\ntimm                                  1.0.15\ntinycss2                              1.4.0\ntokenizers                            0.21.4\ntoml                                  0.10.2\ntomlkit                               0.13.3\ntoolz                                 1.0.0\ntorch                                 2.7.0\ntorch-optimizer                       0.3.0\ntorchao                               0.10.0\ntorchaudio                            2.6.0+cu124\ntorchdata                             0.11.0\ntorchinfo                             1.8.0\ntorchmetrics                          1.7.3\ntorchsummary                          1.5.1\ntorchtune                             0.6.1\ntorchvision                           0.22.0\ntornado                               6.5.1\nTPOT                                  0.12.1\ntqdm                                  4.67.1\ntraitlets                             5.7.1\ntraittypes                            0.2.1\ntransformers                          4.51.3\ntreelite                              4.4.1\ntreescope                             0.1.9\ntriton                                3.3.0\ntrx-python                            0.3\ntsfresh                               0.21.0\ntuf                                   6.0.0\ntweepy                                4.15.0\ntypeguard                             4.4.4\ntyper                                 0.16.0\ntypes-python-dateutil                 2.9.0.20250516\ntypes-pytz                            2025.2.0.20250516\ntypes-setuptools                      80.9.0.20250529\ntyping_extensions                     4.14.0\ntyping-inspect                        0.9.0\ntyping-inspection                     0.4.1\ntzdata                                2025.2\ntzlocal                               5.3.1\nuc-micro-py                           1.0.3\nucx-py-cu12                           0.42.0\nucxx-cu12                             0.42.0\nujson                                 5.10.0\numap-learn                            0.5.7\numf                                   0.11.0\nupdate-checker                        0.18.0\nuri-template                          1.3.0\nuritemplate                           4.2.0\nurllib3                               2.5.0\nurwid                                 3.0.2\nurwid_readline                        0.15.1\nuvicorn                               0.34.3\nvalidators                            0.35.0\nvega-datasets                         0.9.0\nvisions                               0.8.1\nvtk                                   9.3.1\nwadllib                               1.3.6\nWand                                  0.6.13\nwandb                                 0.18.7\nwasabi                                1.1.3\nwatchdog                              6.0.0\nwavio                                 0.0.9\nwcwidth                               0.2.13\nweasel                                0.4.1\nwebcolors                             24.11.1\nwebencodings                          0.5.1\nwebsocket-client                      1.8.0\nwebsockets                            15.0.1\nWerkzeug                              3.1.3\nwheel                                 0.45.1\nwidgetsnbextension                    4.0.14\nwoodwork                              0.31.0\nwordcloud                             1.9.4\nwrapt                                 1.17.2\nwurlitzer                             3.1.1\nxarray                                2025.3.1\nxarray-einstats                       0.9.1\nxgboost                               2.0.3\nxlrd                                  2.0.2\nxvfbwrapper                           0.2.13\nxxhash                                3.5.0\nxyzservices                           2025.4.0\ny-py                                  0.6.2\nyarl                                  1.20.1\nydata-profiling                       4.16.1\nydf                                   0.9.0\nyellowbrick                           1.5\nyfinance                              0.2.63\nypy-websocket                         0.8.4\nzict                                  3.0.0\nzipp                                  3.23.0\nzstandard                             0.23.0\nzstd                                  1.5.7.2\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}